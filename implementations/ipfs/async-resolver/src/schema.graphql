#import { Module, MaybeUriOrManifest } into UriResolver from "wrap://ens/wrappers.polywrap.eth:uri-resolver-ext@1.1.0"
#import { Module } into Client from "wrap://ens/wrappers.polywrap.eth:ipfs-http-client@1.0.0"
#import { Module, Task, TaskResult, ReturnWhen } into Concurrent from "wrap://ens/wrappers.polywrap.eth:concurrent@1.0.0"
#use { getImplementations } for Concurrent
#use { getImplementations } for Client

type Module implements UriResolver_Module {}

"""
Number of times to retry request on failure (excluding initial request)
"""
type Retries {
  tryResolveUri: UInt32
  getFile: UInt32
}

type Env {
  """
  Retry request on failure
  """
  retries: Retries

  """
  Response timeout for HTTP requests
  """
  timeout: UInt32

  """
  Default provider
  """
  provider: String!

  """
  Fallback providers
  """
  fallbackProviders: [String!]

  """
  Disable querying providers in parallel when resolving URIs
  """
  disableParallelRequests: Boolean
}